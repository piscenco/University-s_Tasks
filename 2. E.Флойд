#include <iostream>

int** Floyd(int **graph, int n) {
	for (int k = 0; k < n; k++) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				graph[i][j] = std::min(graph[i][j], graph[i][k] + graph[k][j]);
			}
		}
	}

	return graph;
}

int main() {
	int n;
	std::cin >> n;
    int** graph = new int*[n];
    for (int i = 0; i < n; i++){
        graph[i] = new int [n];
    }
	for(int i = 0; i < n; i++){
        for (int j = 0; j < n; j++) {
			std::cin >> graph[i][j];
		}
	}
	graph = Floyd(graph, n);
    for(int i = 0; i < n; i++){
        for (int j = 0; j < n; j++) {
			std::cout << graph[i][j]<< " ";
		}
		std::cout << std::endl;
	}
    for (int j = 0; j < n; j++) {
			delete graph[j];
		}
		delete graph;

	return 0;
}
